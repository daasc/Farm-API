enum FarmType {
  CRIA
  RECRIA
  ENGORDA
  CICLO_COMPLETO
}

model Product {
  id               String   @id @default(uuid())
  name             String
  category         String
  consumptionLevel Float
  feedBunkSpacing  Float
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model HistoryPasture {
  id                String   @id @default(uuid())
  pastureId         String
  updatedAt         DateTime @default(now())
  AEF               Float
  animalsTotal      Int
  UA                Float
  stockingRate      Float
  feedBunkOffer     Float
  occupation        Boolean
  UAExtra           Float
  stockingRateExtra Float
  deficit           Float
  name              String
  area              Float
  percentAEF        Float
  vacas             Int
  vacasWeight       Float
  bezerros          Int
  bezerrosWeight    Float
  novilha           Int
  novilhaWeight     Float
  touro             Int
  touroWeight       Float
  gabarro           Int
  gabarroWeight     Float
  tropa             Int
  tropaWeight       Float
  bois              Int
  boisWeight        Float
  animals           Int
  weight            Float
  cocho             Float
  demand            Float
  observation       String?
  pesoCat           Float?
  category          String
  createdAt         DateTime
  changes           Json
  pasture           Pasture  @relation(fields: [pastureId], references: [id])
}
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id           String   @id @default(uuid())
  name         String
  email        String   @unique
  passwordHash String
  role         String   @default("admin")
  farms        Farm[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Farm {
  id           String   @id @default(uuid())
  name         String
  location     String
  email        String   @unique
  passwordHash String
  role         String @default("user")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  adminId      String
  admin        Admin    @relation(fields: [adminId], references: [id])
  pastures     Pasture[]
  types        FarmType[]
}

model Pasture {
  AEF              Float   @default(0)
  animalsTotal     Int     @default(0)
  UA               Float   @default(0)
  stockingRate     Float   @default(0)
  feedBunkOffer    Float   @default(0)
  occupation       Boolean @default(false)
  UAExtra          Float   @default(0)
  stockingRateExtra Float  @default(0)
  deficit          Float   @default(0)
  id           String   @id @default(uuid())
  farmId       String
  name         String
  area         Float
  percentAEF   Float
  vacas        Int
  vacasWeight  Float
  bezerros     Int
  bezerrosWeight Float
  novilha      Int
  novilhaWeight Float
  touro        Int
  touroWeight  Float
  gabarro      Int
  gabarroWeight Float
  tropa        Int
  tropaWeight  Float
  bois         Int
  boisWeight   Float
  animals      Int
  weight       Float
  cocho        Float
  demand       Float    @default(0.05)
  observation  String?
  pesoCat      Float?
  category     Json
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  farm         Farm     @relation(fields: [farmId], references: [id])
  feedingRecords FeedingRecord[]
  historyPastures HistoryPasture[]
}

model FeedingRecord {
  dataInicio         DateTime?
  dataFim            DateTime?
  categoria          String?
  abastecimentoKg    Float?
  id                 String   @id @default(uuid())
  pastureId          String
  product            String
  daysUsed           Int
  feedKg             Float
  consumptionPercentPV Float
  mes                String?
  createdAt          DateTime @default(now())
  recordedAt         DateTime
  pasture            Pasture  @relation(fields: [pastureId], references: [id])
}

